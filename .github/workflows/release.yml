name: release

on:
  push:
    branches:
      - master
      - next

jobs:
  publish:
    runs-on: ubuntu-latest
    if: >
      !startsWith(github.event.head_commit.message, 'misc: release v') &&
      github.event.head_commit.message != 'misc: readme badges' &&
      github.event.head_commit.message != 'merge master into next'
    steps:
      - id: app_token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.RELEASE_BOT_APP_ID }}
          private-key: ${{ secrets.RELEASE_BOT_PRIVATE_KEY }}

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref_name }}
          token: ${{ steps.app_token.outputs.token }}

      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: npm
          registry-url: "https://registry.npmjs.org/"
          always-auth: true
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - run: npm ci

      - id: version
        run: node scripts/version.ts ${{ github.ref_name }}

      - run: npm version --no-git-tag-version "${{steps.version.outputs.NEW_VERSION}}"

      - run: node scripts/readme.ts

      - uses: EndBug/add-and-commit@v9
        with:
          add: package.json package-lock.json README.md
          message: "misc: release v${{ steps.version.outputs.NEW_VERSION }}"
          committer_name: Renuel Release Bot
          committer_email: 2068216+Renuel-Release-Bot[bot]@users.noreply.github.com

      - uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ steps.app_token.outputs.token }}
        with:
          tag_name: v${{ steps.version.outputs.NEW_VERSION }}
          target_commitish: ${{ github.ref_name }}
          prerelease: ${{ github.ref_name == 'next' }}
          body: ${{ steps.version.outputs.RELEASE_BODY }}

      - run: node scripts/readme.ts --npm

      - if: github.ref_name == 'master'
        run: npm publish

      - if: github.ref_name == 'next'
        run: npm publish --tag next

  cleanup:
    runs-on: ubuntu-latest
    if: github.ref_name == 'master'
    needs: publish
    steps:
      - id: app_token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.RELEASE_BOT_APP_ID }}
          private-key: ${{ secrets.RELEASE_BOT_PRIVATE_KEY }}

      - uses: morbalint/git-merge-action@v1
        with:
          source: master
          target: next
          strategy_options: "ours"
          user_name: Renuel Release Bot
          user_email: 2068216+Renuel-Release-Bot[bot]@users.noreply.github.com
          token: ${{ steps.app_token.outputs.token }}

      - uses: actions/checkout@v4
        with:
          ref: next
          token: ${{ steps.app_token.outputs.token }}

      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: npm

      - run: npm ci

      - run: node scripts/readme.ts

      - uses: EndBug/add-and-commit@v9
        with:
          add: README.md
          message: "misc: readme badges"
          committer_name: Renuel Release Bot
          committer_email: 2068216+Renuel-Release-Bot[bot]@users.noreply.github.com

      - name: pr
        run: |
          PR_TITLE="misc: release latest"
          PR_BODY="This Pull Request is automatically managed and kept open indefinitely. It proposes merging all new development from the **\`next\`** branch into **\`master\`**. Merge this PR when the next 'latest' stable release is ready."
          gh pr create \
            --title "$PR_TITLE" \
            --body "$PR_BODY" \
            --base master \
            --head next \
            --repo ${{ github.repository }}
        env:
          GITHUB_TOKEN: ${{ steps.app_token.outputs.token }}
